#!/usr/bin/env bash
set -Eeuo pipefail

trap 'echo "‚ùå Error at line $LINENO"; exit 1' ERR

KEEP=${KEEP:-5}
HASH="${1:-HEAD}"

# —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º—ã –≤ git-—Ä–µ–ø–æ –∏ –≤–æ–∑—å–º—ë–º –∫–æ—Ä–µ–Ω—å
repo_root="$(git rev-parse --show-toplevel 2>/dev/null)" || { echo "‚ùå Not a git repository"; exit 1; }
cd "$repo_root"

# –ø—Ä–æ–≤–µ—Ä–∏–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–æ–º–º–∏—Ç–∞/—Å—Å—ã–ª–∫–∏
if ! git rev-parse --verify "${HASH}^{commit}" >/dev/null 2>&1; then
  echo "‚ùå Invalid commit ref: $HASH"
  exit 1
fi

SHORT_HASH="$(git rev-parse --short "$HASH")"
ARCHIVE_DIR="$repo_root/archives"
ARCHIVE_FILE="$ARCHIVE_DIR/commit_${SHORT_HASH}.zip"

mkdir -p "$ARCHIVE_DIR"

# –≤–æ–∑—å–º—ë–º –≤—Å–µ tracked —Ñ–∞–π–ª—ã –Ω–∞ –∫–æ–º–º–∏—Ç–µ
FILES="$(git ls-tree -r --name-only "$HASH" || true)"

# –ø—Ä–∏–º–µ–Ω–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ .archiveignore (regex-–ø–∞—Ç—Ç–µ—Ä–Ω—ã)
if [[ -f "$repo_root/.archiveignore" ]]; then
  while IFS= read -r pattern; do
    [[ -z "$pattern" || "$pattern" =~ ^[[:space:]]*# ]] && continue
    FILES="$(echo "$FILES" | grep -v -E "$pattern" || true)"
  done < "$repo_root/.archiveignore"
fi

if [[ -z "${FILES//[$'\t\r\n ']/}" ]]; then
  echo "‚ÑπÔ∏è  No matching files to archive after filters."
  exit 0
fi

# —É–ø–∞–∫–æ–≤–∫–∞ (zip ‚Üí 7z; –∏–Ω–∞—á–µ —Å–æ–æ–±—â–∏—Ç—å)
if command -v zip >/dev/null 2>&1; then
  echo "$FILES" | zip -q -@ "$ARCHIVE_FILE"
elif command -v 7z >/dev/null 2>&1; then
  tmpfile="$(mktemp)"
  echo "$FILES" > "$tmpfile"
  7z a -tzip "$ARCHIVE_FILE" @"$tmpfile" >/dev/null
  rm -f "$tmpfile"
else
  echo "‚ùå No archiver found (zip or 7z). macOS: zip –µ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é; Linux: sudo apt-get install zip"
  exit 1
fi

# –¥–æ–±–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ git hooks (–µ—Å–ª–∏ –µ—Å—Ç—å)
if [ -d "$repo_root/.git/hooks" ]; then
  zip -qr "$ARCHIVE_FILE" .git/hooks -x "*.sample"
fi

SIZE="$(du -h "$ARCHIVE_FILE" | awk '{print $1}')"
echo "‚úÖ Created: $ARCHIVE_FILE ($SIZE)"

# —á–∏—Å—Ç–∏–º —Å—Ç–∞—Ä—ã–µ –∞—Ä—Ö–∏–≤—ã, —Ö—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ KEEP
all_archives=()
while IFS= read -r f; do
  all_archives+=("$f")
done < <(ls -t "$ARCHIVE_DIR"/commit_*.zip 2>/dev/null || true)

if (( ${#all_archives[@]} > KEEP )); then
  to_delete=( "${all_archives[@]:KEEP}" )
  for f in "${to_delete[@]}"; do
    rm -f -- "$f" || true
  done
  echo "üßπ Pruned old archives: kept $KEEP"
fi
